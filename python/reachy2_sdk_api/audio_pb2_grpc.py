# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import audio_pb2 as audio__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class AudioServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAudioFiles = channel.unary_unary(
                '/component.audio.AudioService/GetAudioFiles',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=audio__pb2.AudioFiles.FromString,
                )
        self.PlayAudioFile = channel.unary_unary(
                '/component.audio.AudioService/PlayAudioFile',
                request_serializer=audio__pb2.AudioFile.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StopPlaying = channel.unary_unary(
                '/component.audio.AudioService/StopPlaying',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.RecordAudioFile = channel.unary_unary(
                '/component.audio.AudioService/RecordAudioFile',
                request_serializer=audio__pb2.AudioFile.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.StopRecording = channel.unary_unary(
                '/component.audio.AudioService/StopRecording',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UploadAudioFile = channel.stream_unary(
                '/component.audio.AudioService/UploadAudioFile',
                request_serializer=audio__pb2.AudioFileRequest.SerializeToString,
                response_deserializer=audio__pb2.AudioAck.FromString,
                )
        self.DownloadAudioFile = channel.unary_stream(
                '/component.audio.AudioService/DownloadAudioFile',
                request_serializer=audio__pb2.AudioFile.SerializeToString,
                response_deserializer=audio__pb2.AudioFileRequest.FromString,
                )
        self.RemoveAudioFile = channel.unary_unary(
                '/component.audio.AudioService/RemoveAudioFile',
                request_serializer=audio__pb2.AudioFile.SerializeToString,
                response_deserializer=audio__pb2.AudioAck.FromString,
                )


class AudioServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAudioFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PlayAudioFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopPlaying(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecordAudioFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopRecording(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadAudioFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadAudioFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveAudioFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AudioServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAudioFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAudioFiles,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=audio__pb2.AudioFiles.SerializeToString,
            ),
            'PlayAudioFile': grpc.unary_unary_rpc_method_handler(
                    servicer.PlayAudioFile,
                    request_deserializer=audio__pb2.AudioFile.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StopPlaying': grpc.unary_unary_rpc_method_handler(
                    servicer.StopPlaying,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'RecordAudioFile': grpc.unary_unary_rpc_method_handler(
                    servicer.RecordAudioFile,
                    request_deserializer=audio__pb2.AudioFile.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'StopRecording': grpc.unary_unary_rpc_method_handler(
                    servicer.StopRecording,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UploadAudioFile': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadAudioFile,
                    request_deserializer=audio__pb2.AudioFileRequest.FromString,
                    response_serializer=audio__pb2.AudioAck.SerializeToString,
            ),
            'DownloadAudioFile': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadAudioFile,
                    request_deserializer=audio__pb2.AudioFile.FromString,
                    response_serializer=audio__pb2.AudioFileRequest.SerializeToString,
            ),
            'RemoveAudioFile': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveAudioFile,
                    request_deserializer=audio__pb2.AudioFile.FromString,
                    response_serializer=audio__pb2.AudioAck.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'component.audio.AudioService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AudioService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAudioFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.audio.AudioService/GetAudioFiles',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            audio__pb2.AudioFiles.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PlayAudioFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.audio.AudioService/PlayAudioFile',
            audio__pb2.AudioFile.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopPlaying(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.audio.AudioService/StopPlaying',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecordAudioFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.audio.AudioService/RecordAudioFile',
            audio__pb2.AudioFile.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopRecording(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.audio.AudioService/StopRecording',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadAudioFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/component.audio.AudioService/UploadAudioFile',
            audio__pb2.AudioFileRequest.SerializeToString,
            audio__pb2.AudioAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadAudioFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/component.audio.AudioService/DownloadAudioFile',
            audio__pb2.AudioFile.SerializeToString,
            audio__pb2.AudioFileRequest.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveAudioFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/component.audio.AudioService/RemoveAudioFile',
            audio__pb2.AudioFile.SerializeToString,
            audio__pb2.AudioAck.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
