"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import head_service_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class HeadArkitStreamStub:
    """servo_json -- 示例 {"mouthUpperUpLeft":0.5,"mouthUpperUpRight":0.1...} 舵机参数"""

    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    SetHeadState: grpc.UnaryUnaryMultiCallable[
        head_service_pb2.HeadArkitMessage,
        head_service_pb2.Empty,
    ]

    GetHeadState: grpc.UnaryUnaryMultiCallable[
        head_service_pb2.Empty,
        head_service_pb2.HeadArkitMessage,
    ]

class HeadArkitStreamAsyncStub:
    """servo_json -- 示例 {"mouthUpperUpLeft":0.5,"mouthUpperUpRight":0.1...} 舵机参数"""

    SetHeadState: grpc.aio.UnaryUnaryMultiCallable[
        head_service_pb2.HeadArkitMessage,
        head_service_pb2.Empty,
    ]

    GetHeadState: grpc.aio.UnaryUnaryMultiCallable[
        head_service_pb2.Empty,
        head_service_pb2.HeadArkitMessage,
    ]

class HeadArkitStreamServicer(metaclass=abc.ABCMeta):
    """servo_json -- 示例 {"mouthUpperUpLeft":0.5,"mouthUpperUpRight":0.1...} 舵机参数"""

    @abc.abstractmethod
    def SetHeadState(
        self,
        request: head_service_pb2.HeadArkitMessage,
        context: _ServicerContext,
    ) -> typing.Union[head_service_pb2.Empty, collections.abc.Awaitable[head_service_pb2.Empty]]: ...

    @abc.abstractmethod
    def GetHeadState(
        self,
        request: head_service_pb2.Empty,
        context: _ServicerContext,
    ) -> typing.Union[head_service_pb2.HeadArkitMessage, collections.abc.Awaitable[head_service_pb2.HeadArkitMessage]]: ...

def add_HeadArkitStreamServicer_to_server(servicer: HeadArkitStreamServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
